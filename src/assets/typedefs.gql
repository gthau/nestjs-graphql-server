type Asset {
  id: String!
  name: String!
  slug: String!
  symbol: String!
}

type AssetResponse {
  asset: Asset
}

type AssetError {
  error: String!
}

type AssetNotFound {
  symbol: String!
}

input AssetInput {
  symbol: String!
}

input AssetsInput {
  symbols: [String!]!
}

type AssetsResponse {
  assets: [Asset!]
  notFound: [AssetNotFound!]
}

type GraphqlError {
  error: String!
}

union AssetResult = AssetResponse | AssetNotFound | AssetError
union AssetsResult = AssetsResponse | GraphqlError

extend type Query {
  asset(input: AssetInput!): AssetResult!
  assets(input: AssetsInput!): AssetsResult!
}
